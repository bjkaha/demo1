buildscript {  // buildscript block = define dependencies for the rest of the script
    ext { // ext = 전역변수를 설정 하겠다
        springBootVersion = '2.1.7.RELEASE' // 전역변수 springBootVersion 생성
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    // 빌드 스크맆을 위한 의존성
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 앞서 선언한 플러그인 의존성들을 적용할 것인가?
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // Spring Boot의 의존성을 관리하는 플러그인
// 위 4 플러그인은 자바, 스프링부트 사용하기 위해 필수

group 'com.demo'
version '1.0.1-SNAPSHOT'
sourceCompatibility = 1.8

// 의존성들을 받을 원격저장소들
repositories {
    mavenCentral() // lib를 업로드하는 과정이 복잡해 많은 개발자들이 jcenter로 갈아타는 중
    jcenter() // 업로드 과정을 더 쉽게 한 저장소
}

// 개발을 위한 의존성
dependencies {
    // version을 specify하지 않아야 ${springBootVersion}에 적합한 버전으로 적용됨.
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')

    // spring-security-oauth2-client, spring-security-oauth2-jose 기본으로 관리 해줌.
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')

    compile('org.springframework.session:spring-session-jdbc')

    // maria db
    compile("org.mariadb.jdbc:mariadb-java-client")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}